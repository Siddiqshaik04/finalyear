{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaik siddiq\\\\Desktop\\\\project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, Routes, Route } from 'react-router-dom';\nimport QuestionDisplay from './components/QuestionDisplay';\nimport QuizDisplay from './components/QuizDisplay';\nimport FileUploader from './components/FileUploader';\nimport DifficultySelector from './components/DifficultySelector';\nimport NumberOfQuestionsInput from './components/NumberOfQuestionsInput';\nimport ChoiceModal from './components/ChoiceModal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [generatedQuestions, setGeneratedQuestions] = useState([]);\n  const [quiz, setQuiz] = useState([]);\n  const [difficulty, setDifficulty] = useState('Easy');\n  const [numberOfQuestions, setNumberOfQuestions] = useState(1);\n  const [isChoiceModalOpen, setIsChoiceModalOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const navigate = useNavigate();\n  const handleFileUpload = file => {\n    setIsChoiceModalOpen(true);\n    setSelectedOption(null);\n  };\n  const handleGenerate = async (choice, file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('difficulty', difficulty);\n    formData.append('numberOfQuestions', numberOfQuestions);\n    formData.append('type', choice);\n    try {\n      const response = await axios.post('http://localhost:5000/api/generate', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (choice === 'questions') {\n        setGeneratedQuestions(response.data.questions);\n        navigate('/questions');\n      } else {\n        setQuiz(response.data.quiz);\n        navigate('/quiz');\n      }\n    } catch (error) {\n      console.error('Error generating content:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Question Bank Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-item\",\n              children: /*#__PURE__*/_jsxDEV(NumberOfQuestionsInput, {\n                numberOfQuestions: numberOfQuestions,\n                setNumberOfQuestions: setNumberOfQuestions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-item\",\n              children: /*#__PURE__*/_jsxDEV(DifficultySelector, {\n                difficulty: difficulty,\n                setDifficulty: setDifficulty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-uploader\",\n            children: /*#__PURE__*/_jsxDEV(FileUploader, {\n              onFileUpload: handleFileUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/questions\",\n        element: /*#__PURE__*/_jsxDEV(QuestionDisplay, {\n          generatedQuestions: generatedQuestions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/quiz\",\n        element: /*#__PURE__*/_jsxDEV(QuizDisplay, {\n          quiz: quiz\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), isChoiceModalOpen && /*#__PURE__*/_jsxDEV(ChoiceModal, {\n      isOpen: isChoiceModalOpen,\n      onClose: () => setIsChoiceModalOpen(false),\n      onSelect: choice => {\n        setSelectedOption(choice);\n        handleGenerate(choice);\n        setIsChoiceModalOpen(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nlvMkcg6LyKnJKtV4CwNgHr7EnE=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","useNavigate","Routes","Route","QuestionDisplay","QuizDisplay","FileUploader","DifficultySelector","NumberOfQuestionsInput","ChoiceModal","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","generatedQuestions","setGeneratedQuestions","quiz","setQuiz","difficulty","setDifficulty","numberOfQuestions","setNumberOfQuestions","isChoiceModalOpen","setIsChoiceModalOpen","selectedOption","setSelectedOption","navigate","handleFileUpload","file","handleGenerate","choice","formData","FormData","append","response","post","headers","data","questions","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onFileUpload","isOpen","onClose","onSelect","_c","$RefreshReg$"],"sources":["C:/Users/shaik siddiq/Desktop/project/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, Routes, Route } from 'react-router-dom';\nimport QuestionDisplay from './components/QuestionDisplay';\nimport QuizDisplay from './components/QuizDisplay';\nimport FileUploader from './components/FileUploader';\nimport DifficultySelector from './components/DifficultySelector';\nimport NumberOfQuestionsInput from './components/NumberOfQuestionsInput';\nimport ChoiceModal from './components/ChoiceModal';\nimport './App.css';\n\nfunction App() {\n  const [generatedQuestions, setGeneratedQuestions] = useState([]);\n  const [quiz, setQuiz] = useState([]);\n  const [difficulty, setDifficulty] = useState('Easy');\n  const [numberOfQuestions, setNumberOfQuestions] = useState(1);\n  const [isChoiceModalOpen, setIsChoiceModalOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const navigate = useNavigate();\n\n  const handleFileUpload = (file) => {\n    setIsChoiceModalOpen(true);\n    setSelectedOption(null);\n  };\n\n  const handleGenerate = async (choice, file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('difficulty', difficulty);\n    formData.append('numberOfQuestions', numberOfQuestions);\n    formData.append('type', choice);\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/generate', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      if (choice === 'questions') {\n        setGeneratedQuestions(response.data.questions);\n        navigate('/questions');\n      } else {\n        setQuiz(response.data.quiz);\n        navigate('/quiz');\n      }\n    } catch (error) {\n      console.error('Error generating content:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Question Bank Generator</h1>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <>\n              <div className=\"flex-container\">\n                <div className=\"flex-item\">\n                  <NumberOfQuestionsInput numberOfQuestions={numberOfQuestions} setNumberOfQuestions={setNumberOfQuestions} />\n                </div>\n                <div className=\"flex-item\">\n                  <DifficultySelector difficulty={difficulty} setDifficulty={setDifficulty} />\n                </div>\n              </div>\n              <div className=\"file-uploader\">\n                <FileUploader onFileUpload={handleFileUpload} />\n              </div>\n            </>\n          }\n        />\n        <Route path=\"/questions\" element={<QuestionDisplay generatedQuestions={generatedQuestions} />} />\n        <Route path=\"/quiz\" element={<QuizDisplay quiz={quiz} />} />\n      </Routes>\n\n      {isChoiceModalOpen && (\n        <ChoiceModal\n          isOpen={isChoiceModalOpen}\n          onClose={() => setIsChoiceModalOpen(false)}\n          onSelect={(choice) => {\n            setSelectedOption(choice);\n            handleGenerate(choice);\n            setIsChoiceModalOpen(false);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}